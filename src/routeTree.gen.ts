/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as UserRouteImport } from './routes/user'
import { Route as FeedsRouteImport } from './routes/feeds'
import { Route as IndexRouteImport } from './routes/index'
import { Route as EntriesIdRouteImport } from './routes/entries/$id'

const UserRoute = UserRouteImport.update({
  id: '/user',
  path: '/user',
  getParentRoute: () => rootRouteImport,
} as any)
const FeedsRoute = FeedsRouteImport.update({
  id: '/feeds',
  path: '/feeds',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const EntriesIdRoute = EntriesIdRouteImport.update({
  id: '/entries/$id',
  path: '/entries/$id',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/feeds': typeof FeedsRoute
  '/user': typeof UserRoute
  '/entries/$id': typeof EntriesIdRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/feeds': typeof FeedsRoute
  '/user': typeof UserRoute
  '/entries/$id': typeof EntriesIdRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/feeds': typeof FeedsRoute
  '/user': typeof UserRoute
  '/entries/$id': typeof EntriesIdRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/feeds' | '/user' | '/entries/$id'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/feeds' | '/user' | '/entries/$id'
  id: '__root__' | '/' | '/feeds' | '/user' | '/entries/$id'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  FeedsRoute: typeof FeedsRoute
  UserRoute: typeof UserRoute
  EntriesIdRoute: typeof EntriesIdRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/user': {
      id: '/user'
      path: '/user'
      fullPath: '/user'
      preLoaderRoute: typeof UserRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/feeds': {
      id: '/feeds'
      path: '/feeds'
      fullPath: '/feeds'
      preLoaderRoute: typeof FeedsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/entries/$id': {
      id: '/entries/$id'
      path: '/entries/$id'
      fullPath: '/entries/$id'
      preLoaderRoute: typeof EntriesIdRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  FeedsRoute: FeedsRoute,
  UserRoute: UserRoute,
  EntriesIdRoute: EntriesIdRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
